[{"content":" Work in progress. Note # Not sure why it does not work in non-debug mode (GDB)\ngef-remote --qemu-user localhost 1234 aarch64 (ARM64) # Tools # References: https://docs.pwntools.com/en/stable/qemu.html\ngdb: https://github.com/xpack-dev-tools/aarch64-none-elf-gcc-xpack/ qemu: sudo apt-get install qemu-user-static libs: sudo apt-get install libc6-arm64-cross installs to /usr/aarch64-linux-gnu/ Running qemu: qemu-aarch64-static ./binary\nAssembly # References: http://blog.perfect.blue/ROPing-on-Aarch64\nRegisters # x0 to x7 are used to pass arguments x29 is equivalent to rbp in x86 x30 stores return address Function Prologue # Pre-indexed performs the offset operation then the assembly instruction:\nAdd N to sp (sp = sp + N) Stores old frame pointer, x29, to [sp] and return address, x30, to [sp + 8] stp x29, x30, [sp, #N]! # pre-indexed [base, #offset]! mov x29, sp Function Epilogue # Post-indexed performs the assembly instruction then offset operation\nLoad [sp] to x29 and [sp + 8] to x30 Add N to sp (sp = sp + N) ldp x29, x30, [sp], #N # post-indexed [base], #offset Stack Layout # +--------------------------+ ^ Lower memory address | callee\u0026#39;s saved x29 | | +--------------------------+ | | callee\u0026#39;s saved x30 | | +--------------------------+ | Stack growth direction | callee\u0026#39;s local variables | +--------------------------+ | caller\u0026#39;s saved x29 | +--------------------------+ | caller\u0026#39;s saved x30 | +--------------------------+ | caller\u0026#39;s local variables | +--------------------------+ Higher memory address Unlike in x86 where saved rbp and rip are below the local variables which allow us to overwrite the saved rip and immediately return to our desired address, in ARM64 we overwrite the callers\u0026rsquo;s return address instead due to the stack layout which means that we would first return normally to the caller and only then return to our desired address\n","date":"25 July 2023","permalink":"/posts/imaginaryctf-2023/pwn/generic-rop-challenge/","section":"Welcome to my blog","summary":"ARM64 ROP","title":"[imaginary-ctf-2023] [pwn] generic-rop-challenge"},{"content":"","date":"25 July 2023","permalink":"/tags/arm/","section":"Tags","summary":"","title":"arm"},{"content":"","date":"25 July 2023","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"25 July 2023","permalink":"/categories/imaginary-ctf-2023/","section":"Categories","summary":"","title":"imaginary-ctf-2023"},{"content":"","date":"25 July 2023","permalink":"/","section":"My Average Blog","summary":"","title":"My Average Blog"},{"content":"","date":"25 July 2023","permalink":"/categories/pwn/","section":"Categories","summary":"","title":"pwn"},{"content":"","date":"25 July 2023","permalink":"/tags/rop/","section":"Tags","summary":"","title":"rop"},{"content":"","date":"25 July 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"Lorem ipsum dolor sit amet, qui minim labore adipisicing minim sint cillum sint consectetur cupidatat.\n","date":"25 July 2023","permalink":"/posts/","section":"Welcome to my blog","summary":"Lorem ipsum dolor sit amet, qui minim labore adipisicing minim sint cillum sint consectetur cupidatat.","title":"Welcome to my blog"},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"}]